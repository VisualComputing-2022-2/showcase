<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual Computing Reports</title><link>https://visualcomputing-2022-2.github.io/showcase/</link><description>Recent content in Introduction on Visual Computing Reports</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing-2022-2.github.io/showcase/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/ames/ames/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/ames/ames/</guid><description>Ames Ilussions # Adelbert Ames Jr. # Adelbert Ames Jr. (August 19, 1880 – July 3, 1955) was an American scientist who made contributions to physics, physiology, ophthalmology, psychology, and philosophy. He pioneered the study of physiological optics at Dartmouth College, serving as a research professor, then as director of research at the Dartmouth Eye Institute. He conducted important research into aspects of binocular vision, including cyclophoria and aniseikonia. Ames is perhaps best known for constructing illusions of visual perception, most notably the Ames room and the Ames window.</description></item><item><title/><link>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/illusions/illusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/illusions/illusions/</guid><description>Illusions # &amp;ldquo;Stepping Feet&amp;rdquo; Motion Illusion # It was demonstrated by Stuart Anstis in 2003.
The edges of the light ‘foot’ merge with the light bars and are only visible when they traverse the dark bars. So, half of the time there really is no motion cue, and perception goes into default, i.e., no motion. For the dark foot the same holds, only at alternate times.
With reduced contrast of the grating, equiluminance of edges and grating is no longer present, so the effect disappears</description></item><item><title/><link>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/masking/</guid><description>Image Kernels # What is a Convolution? # In image processing, convolution is the process of transforming an image by applying a kernel over each pixel and its local neighbors across the entire image.
The Convolution Process involves those two steps.
It places the Kernel Matrix over each pixel of the image, multiplies each value of the Kernel with the corresponding pixel it is over. Sums the resulting multiplied values and returns the resulting value as the new value of the center pixel.</description></item><item><title/><link>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/1.Coloring-and-Ascii-art/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/1.Coloring-and-Ascii-art/</guid><description>Shaders # Color Blending # ADD: It produces the new color by adding the colors of both the pixels. DIFFERENCE: It subtracts colors from the underlying image. DARKEST: It uses only the darker color of the two pixels. LIGHTEST: It uses only the lighter color of the two pixels. Shortcuts Shortcut Description R Red Circle G Green Circle B Blue Circle Click Change Blending Glitch Effect Shader # Basado en el código de este video La idea del shader es tener un offset para la coordenada en x donde se dibuja el R y el B.</description></item><item><title/><link>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/3.Image-Processing/Magnifier-Tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/3.Image-Processing/Magnifier-Tool/</guid><description>Magnifier Tool # Esta apliación permite utilizar un fragment shader para amplificar el tamaño de la imagen y de un video alreder de un foco.
Instrucciones
Escoja video o imagenen la caja de selección Utilice el desilizador para amuentar o disminuir el tamaño del foco Código (shader): #ifdef GL_ES precision mediump float; #endif uniform sampler2D texture; uniform vec2 texOffset; // holds the 3x3 kernel uniform float mask[9]; uniform vec2 u_mouse; uniform vec2 u_resolution; uniform int option; uniform bool region; uniform float radio; // we need our interpolated tex coord varying vec2 texcoords2; void main() { vec2 xy = gl_FragCoord.</description></item><item><title/><link>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/5.Non-Euclidean-Geometry/5.NonEuclideanGeometry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/5.Non-Euclidean-Geometry/5.NonEuclideanGeometry/</guid><description> Non Euclidean Geometry # Different independently generated three-dimensional spaces are linked so that they can be seen on different faces of a polygon. The idea is to make a separate rendering of each of the objects to be observed from the same point of view.
Shortcuts Shortcut Description C Cube O Octahedron Mouse Camera Control</description></item><item><title/><link>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/6.Lightning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/6.Lightning/</guid><description> Lighting # Diffuse Reflection # This type of reflection allows objects to be seen in an ideal matte tone. This is thanks to Lambert&amp;rsquo;s law of cosines.
The concept was introduced in 1760 in the book photometry written by Johann Heinrich Lambert</description></item><item><title/><link>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/7.Conclusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing-2022-2.github.io/showcase/docs/shortcodes/shaders/7.Conclusions/</guid><description>Conclusiones # Los shaders permiten que la computación gráfica sea más rápida y efectiva. Esto se puede ver reflejado en el procesamiento de imágenes, en el cual, para aplicar un filtro, es necesario hacer transformaciones pixel a pixel. En algunas imágenes estos son millones de tareas por realizar. Por tal motivo, paralelizar estos procesos ha permitido que la apliación de filtros sea más rápida, previniendo demoras que puedan entorpecer la experiencia de usuario.</description></item></channel></rss>